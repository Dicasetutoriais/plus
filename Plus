#!/bin/bash

# Reset terminal
tput reset

# Check if running as root
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mvocê precisa executar como root\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 1
fi

# Function to display progress bar
fun_bar() {
    comando=("$@")
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        "${comando[@]}" -y > /dev/null 2>&1
        touch $HOME/fim
    ) > /dev/null 2>&1 &
    tput civis
    echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
    while true; do
        for((i=0; i<18; i++)); do
            echo -ne "\033[1;31m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;37m]"
        tput cuu1
        tput dl1
        echo -ne "  \033[1;37mAGUARDE \033[1;37m- \033[1;37m["
    done
    echo -e "\033[1;37m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}

# Update and upgrade system
fun_attlist() {
    apt-get update -y && apt-get upgrade -y
    [[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
    echo "crz: $(date)" > /usr/share/.plus/.plus
}
fun_bar 'fun_attlist'

# Optimize Python
otimize_python() {
    apt-get install python python2 python3.6 python3.7 python3.8 python3.9 -y >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4 >/dev/null 2>&1
    apt install python3-pip -y
    apt install socat -y
    update-alternatives --set python3 /usr/bin/python3.6
}
fun_bar 'otimize_python'

# Install necessary packages
inst_pct () {
    _pacotes=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3-pip" "firewalld")
    for _prog in ${_pacotes[@]}; do
        apt install $_prog -y
    done
    pip install speedtest-cli
    sudo firewall-cmd --zone=public --permanent --add-port=80/tcp  # Add more ports if needed
    sudo firewall-cmd --reload
}
fun_bar 'inst_pct'

# Final steps
tput reset
echo ""
echo -e "          \033[1;37m[\033[1;31m!\033[1;37m] \033[1;32mFINALIZANDO \033[1;37m[\033[1;31m!\033[1;37m] \033[0m"
echo ""
echo -e "      \033[1;37mCONCLUINDO FUNÇÕES E DEFINIÇÕES! \033[0m"
echo ""
fun_bar "$_Ink/list $_lnk $_Ink $_1nk $key"
tput reset
echo ""
cd $HOME
echo -e ""
echo -e "             \033[1;37m • \033[1;32mINSTALAÇÃO CONCLUÍDA\033[1;37m • \033[0m"
echo -e ""
echo -e "\033[1;31m \033[1;37mCOMANDO PRINCIPAL: \033[1;32mmenu\033[0m"
echo -e "\033[1;37m MAIS INFORMACOES \033[1;31m(\033[1;36mTELEGRAM\033[1;31m): \033[1;37m@VEM_BRABO\033[0m"
